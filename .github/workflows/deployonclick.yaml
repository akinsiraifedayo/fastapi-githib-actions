name: Deploy on Dockerhub on Click

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: python-environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from pyproject.toml
        id: versioning
        run: |
          VERSION=$(grep '^version\s*=' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "Extracted version: $VERSION"

      - name: Decode SSL cert and key
        run: |
          echo "$SSL_CERT_B64" | base64 -d > cert.pem
          echo "$SSL_KEY_B64" | base64 -d > privkey.pem
        env:
          SSL_CERT_B64: ${{ secrets.SSL_CERT_B64 }}
          SSL_KEY_B64: ${{ secrets.SSL_KEY_B64 }}


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/pythonapp:latest
            ${{ vars.DOCKERHUB_USERNAME }}/pythonapp:${{ env.VERSION }}

      - name: SSH & Deploy to Server
        if: success()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_SERVER_HOST }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/pythonapp:latest
            docker stop pythonapp || true
            docker rm pythonapp || true
            docker run -d --name pythonapp -p 80:8000 ${{ vars.DOCKERHUB_USERNAME }}/pythonapp:latest
